#! /usr/bin/env bash
# ============================================================================ #
#
# Wraps the \`include-what-you-use' executable our settings and options.
#
#
# ---------------------------------------------------------------------------- #

set -eu;
set -o pipefail;


# ---------------------------------------------------------------------------- #

_as_me="iwyu";

_version="0.1.0";

_usage_msg="USAGE: $_as_me [OPTIONS...] [PROJECT-ROOT:=\$PWD] -- \
[EXTRA-IWYU-ARGS...]

Runs \`iwyu_tool.py' with our settings and options.
";

_help_msg="$_usage_msg
This explicitly adds the \`-Xiwyu' option to all \`EXTRA-IWYU-ARGS' for
convenience.

Headers have already been explicitly included with \`--check_also' and can
be omitted.

A mapping file \`build-aux/iwyu-mappings.json' is automatically applied.

Setting any \`EXTRA-IWYU-ARGS' will override the defaults.
The default \`EXTRA-IWYU-ARGS' are:
  -Xiwyu --no_comments

OPTIONS
  -h,--help         Print help message to STDOUT.
  -u,--usage        Print usage message to STDOUT.
  -v,--version      Print version information to STDOUT.

ENVIRONMENT
  IWYU_TOOL         Command used as \`iwyu_tool.py' executable.
  FIND              Command used as \`find' executable.
  MAKE              Command used as \`make' executable.
";


# ---------------------------------------------------------------------------- #

usage() {
  if [[ "${1:-}" = "-f" ]]; then
    echo "$_help_msg";
  else
    echo "$_usage_msg";
  fi
}


# ---------------------------------------------------------------------------- #

# @BEGIN_INJECT_UTILS@
: "${FIND:=find}";
: "${IWYU_TOOL:=iwyu_tool.py}";
: "${MAKE:=make}";


# ---------------------------------------------------------------------------- #

_PROJECT_ROOT='';

while [[ "$#" -gt 0 ]]; do
  case "$1" in
    # Split short options such as `-abc' -> `-a -b -c'
    -[^-]?*)
      _arg="$1";
      declare -a _args;
      _args=();
      shift;
      _i=1;
      while [[ "$_i" -lt "${#_arg}" ]]; do
        _args+=( "-${_arg:$_i:1}" );
        _i="$(( _i + 1 ))";
      done
      set -- "${_args[@]}" "$@";
      unset _arg _args _i;
      continue;
    ;;
    --*=*)
      _arg="$1";
      shift;
      set -- "${_arg%%=*}" "${_arg#*=}" "$@";
      unset _arg;
      continue;
    ;;
    -u|--usage)    usage;    exit 0; ;;
    -h|--help)     usage -f; exit 0; ;;
    -v|--version)  echo "$_version"; exit 0; ;;
    --) shift; break; ;;
    -?|--*)
      echo "$_as_me: Unrecognized option: \`$1'" >&2;
      usage -f >&2;
      exit 1;
    ;;
    *)
      if [[ -z "$_PROJECT_ROOT" ]]; then
        _PROJECT_ROOT="$1";
      else
        echo "$_as_me: Unexpected argument(s) \`$*'" >&2;
        usage -f >&2;
        exit 1;
      fi
    ;;
  esac
  shift;
done


# ---------------------------------------------------------------------------- #

# Set fallbacks.

: "${_PROJECT_ROOT:=$PWD}";


# ---------------------------------------------------------------------------- #

# Any remaining args go into `_extra_iwyu_args'.
declare -a _extra_iwyu_args;
if [[ "$#" -gt 0 ]]; then
  _extra_iwyu_args+=( "$@" );
else
  _extra_iwyu_args+=( --no_comments );
fi


# ---------------------------------------------------------------------------- #

# Validate args
if ! [[ -d "$_PROJECT_ROOT" ]]; then
  echo "$_as_me: No such directory: \`$_PROJECT_ROOT'" >&2;
  exit 1;
fi


# ---------------------------------------------------------------------------- #

# Create `compile_commands.json' if it's missing.
if ! [[ -r "$_PROJECT_ROOT/compile_commands.json" ]]; then
  $MAKE -C "$_PROJECT_ROOT" compile_commands.json;
fi


# ---------------------------------------------------------------------------- #

# Find all directories with headers.
declare -a _header_dirs;
_header_dirs=( $( $FIND "$_PROJECT_ROOT/include" -type d -print; ) );

# Generate arguments for \`iwyu_tool.py':

declare -a _iwyu_args;
_iwyu_args=(
  -p "$_PROJECT_ROOT"
  --
  -Xiwyu --mapping_file="$_PROJECT_ROOT/build-aux/iwyu-mappings.json"
);

# Add \`-Xiwyu' to all \`_extra_iwyu_args'.
for _arg in "${_extra_iwyu_args[@]}"; do
  if [[ -n "$_arg" ]]; then
    _iwyu_args+=( -Xiwyu "$_arg" );
  fi
done

# Add header directories.
for _dir in "${_header_dirs[@]}"; do
  _iwyu_args+=( '-Xiwyu' "--check_also='$_dir/*.hh'" );
done


# ---------------------------------------------------------------------------- #

# Runnit!

$IWYU_TOOL "${_iwyu_args[@]}";


# ---------------------------------------------------------------------------- #
#
#
#
# ============================================================================ #
